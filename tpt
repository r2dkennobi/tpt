#!/bin/bash

_print_help() {
  cat <<EOF
  SYNOPSYS:
    tpt [OPTION] [ARGS]...

  DESCRIPTION:
    Transport yourself to another dimension (package folder)

  OPTION:
    --help, h
      Show this usage screen
EOF
}

_find_packages() {
  local identifiers=(".mjornir.yaml" "package.xml" ".travis.yml" ".gitlab-ci.yml")
  for identifier in "${identifiers[@]}"
  do
    while IFS= read -r p
    do
      dir_path=$(dirname "$p")
      pkg_name=$(basename "$dir_path")
      pkgs+=("$pkg_name:$dir_path")
    done < <(find "$PROJECT_DIR" -not -path '*/\.*' -name "$identifier")
  done
  # ^ TODO I can do better than this
}

_bash_complete_packages() {
  (
  for entry in "${pkgs[@]}"
  do
    echo "${entry%%:*}"
  done
  )
}

_tpt() {
  PROJECT_DIR=${PROJECT_DIR:-"$HOME"}
  local pkgs=()
  _find_packages
  local cur prev verbs

  COMPREPLY=()
  cur=${COMP_WORDS[COMP_CWORD]}
  prev=${COMP_WORDS[COMP_CWORD-1]}
  verbs="-h --help"

  if [[ ${COMP_CWORD} -eq 1 ]]; then
    COMPREPLY=($(compgen -W "${verbs} $(_bash_complete_packages)" -- "${cur}"))
  else
    case "${prev}" in
      *)
        COMPREPLY=($(compgen -W "$(_bash_complete_packages)" -- "${cur}"))
    esac
  fi

  return 0
}

tpt() {
  PROJECT_DIR=${PROJECT_DIR:-"$HOME"}
  local show_help tpt_back
  for arg in "$@";
  do
    case $arg in
      -h|--help)
        show_help=true
        shift
        ;;
      -)
        tpt_back=true
        shift
        ;;
      *)
        break
        ;;
    esac
  done

  if [[ ${show_help:-false} == "true" ]]; then
    _print_help
  elif [[ "${tpt_back:-false}" == "true" ]]; then
    cd - || exit
  else
    local pkgs=()
    _find_packages
    matches=()
    for entry in "${pkgs[@]}"
    do
      package="${entry%%:*}"
      path="${entry##*:}"
      if [[ "$package" == "$1" ]]; then
        matches+=($path)
      fi
    done
    if [[ "${#matches[@]}" -eq 0 ]]; then
      return
    elif [[ "${#matches[@]}" -eq 1 ]]; then
      cd "${matches[0]}" || exit
    else
      select path in "${matches[@]}"; do
        cd "$path" || exit
        break
      done
    fi
  fi
}

complete -o bashdefault -F _tpt tpt

# Don't run the command if sourcing the file
if ! [[ $_ != "$0" ]]; then
  tpt "$@"
fi
